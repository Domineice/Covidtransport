#include<stdio.h>
#include<iostream>
using namespace std;
#include<stdlib.h>

class NODE{
protected:
      int data;
      NODE* next;
public:
        NODE(int);
        void show_node();
        void insert(NODE*&);
        NODE* move_next();
        ~NODE();
};

NODE::NODE(int x){
      data=x;
      next=NULL;
      cout<<"adding "<< x<<endl;
}
NODE:: ~NODE(){
      cout<<"Node "<<data<<" is being deleted"<<endl;
}
NODE* NODE::move_next(){
      return next;
}
void  NODE:: show_node(){
         cout<<"Node data:"<<data<<endl;
 }
void NODE::insert(NODE*& x){
     x->next=this;

     }

class  family:public NODE{
	private:
		int time[];
		string name;
		int position;
		family * next;
	public:
		family(string,int,int);
		~family();
		int get_position(); 
		void addtime(int x,int time);
};

family::family(string s ,int i ,int j):NODE(j){
	
}

class town{
	private:
		int size;
		NODE*head;
	public:
		void add_family(NODE*&);
		void show_all();
		town();
		~town();
};

town::town(){
	size=0;
	head=NULL;
}

town::~town(){
	int i;
	NODE *t;
	for(i=0;i<size;i++){
            t=head;
             head=t->move_next();
             delete(t);
         }
}

void town::show_all(){
     NODE* t=head;
     int i;
     for(i=0;i<size;i++){
         t->show_node();
         t=t->move_next();
     }
}

void town::add_family(NODE *&A){

          head->insert(A);
          head=A;

       size++;

 }

class building{
	private:
		int time[];
		string name;
		int position;
			
};

int main(){
	town A;
	NODE* t;
	t= new family("Helo",123123,1);
	A.add_family(t);
	t= new family("HAHA",231,2);
	A.add_family(t);
	A.show_all();
	
}
